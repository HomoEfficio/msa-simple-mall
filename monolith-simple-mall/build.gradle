plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.github.johnrengelman.processes' version '0.5.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.2.0'
    id 'java'
}

group = 'io.homo_efficio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springBootAdminVersion', "2.2.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    implementation 'de.codecentric:spring-boot-admin-starter-server'
    implementation 'org.springdoc:springdoc-openapi-ui:1.3.9'
    implementation 'org.springdoc:springdoc-openapi-security:1.3.9'
    implementation 'com.atlassian.oai:swagger-request-validator-mockmvc:2.10.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.postgresql:postgresql:42.2.12'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
    }
}

test {
    useJUnitPlatform()
}

openApi {
//    apiDocsUrl.set("https://localhost:8443/v3/api-docs")  // not work in https: https://github.com/springdoc/springdoc-openapi-gradle-plugin/issues/21
    // json 방식 (default)
//    apiDocsUrl.set("http://localhost:8080/v3/api-docs")
//    outputFileName.set('openapi.json')
    // yaml 방식
    apiDocsUrl.set("http://localhost:8080/v3/api-docs.yaml")
    outputFileName.set('openapi.yml')
    outputDir.set(file("$buildDir/docs"))
    waitTimeInSeconds.set(30)
}
