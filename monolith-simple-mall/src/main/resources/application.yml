server:
  port: 8443
  ssl:
    key-store-type: PKCS12
    key-store: classpath:keystore/monolith.p12
    key-store-password: monolith
    key-alias: localhost
  tomcat:
    threads:
      max: 1

spring.jpa.hibernate.ddl-auto: create

spring.datasource:
  # host이름(postgresql)은 docker-compose 에서 services 항목으로 지정한 PostgreSQL 서비스의 이름과 동일해야 함
  # 그 외 DB 이름 username, password 도 모두 docker-compose 내용과 맞아야 함
  url: jdbc:postgresql://postgresql:5432/monolith-simple-mall
  username: user
  password: pwd

spring:
  application:
    name: monolith-simple-mall
  cloud:
    consul:
      discovery:
        instance-id: ${spring.application.name}.${random.value}
        scheme: https
        health-check-tls-skip-verify: true
    loadbalancer:
      ribbon:
        enabled: false
  jpa:
    show-sql: true
    open-in-view: false

springdoc:
  swagger-ui:
    url: https://gist.githubusercontent.com/HomoEfficio/d36c556dc6fe0e5cbe2b0cee81dadbb6/raw/acbb69b74529e8c254296285ba7be748f5e66cd6/open-api-3-for-msa-simple-mall.yaml

logging:
  level:
    io.homo_efficio: DEBUG

management:
  endpoints:
    web:
      exposure:
        include:
          - '*'
  endpoint:
    health:
      show-details: always



---
spring.profiles: open-api-gen

server:
  port: 8080
  ssl:
    enabled: false



---
spring.profiles: docker

server:
  tomcat:
    threads:
      max: 200

spring:
  jpa:
    show-sql: false
